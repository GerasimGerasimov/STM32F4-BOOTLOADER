#ifndef RAMDATA_H
#define RAMDATA_H

#include "bastypes.h"
//флаги управления и индикации;
typedef 
  union   {
    u32	   i;
    __packed struct {//флаги аварий
      //r0000.L
      unsigned DExS_PWR_LNK     : 1;//Наличие связи с платой DExS.PWR2 (для проверки исправности и достоверности показаний)
      unsigned DExS_PWR_Ready   : 1;//Готовность платы DExS.PWR (в т.ч. напряжение и частоты)
      unsigned b2               : 1;//
      unsigned ExtRegTimeOut    : 1;//1-приостановка внешнего регулятор (косинуса)
      unsigned R_INSL_LOW       : 1;//предупредительный порог изоляции
      unsigned PWR1             : 1;//включает/отключает импульсы упр-я выпрямителем
      unsigned Blank            : 1;//гашение поля инвертированием
      unsigned CLM              : 1;//Current Limit Mode - режим ограничения тока
      //r0000.H
      unsigned imp_block        : 1;//блокировка импульсов для закрытия тиристорного ключа    
      unsigned IExcRef_min      : 1;//Задание тока возбуждения ограничено уставкой минимального задания              
      unsigned IExcRef_max      : 1;//Задание тока возбуждения ограничено уставкой максимального задания
      unsigned b11              : 1;//
      unsigned b12              : 1;//
      unsigned b13              : 1;//
      unsigned UstLow           : 1;//Просадка напряжения сети
      unsigned UstFail          : 1;//Отсутствие напряжения сети
      //r0001.L
      unsigned ForceByUst       : 1;//Форсировка при просадке напряжения статора
      unsigned cfi_enable       : 1;//Флаг обнаружения сигналов тока статора (меандр)
      unsigned cfu_enable       : 1;//Флаг обнаружения сигналов напряжения статора (меандр + уровень больше уставки "отсутствие")
      unsigned i2tR             : 1;// 1-i2t модель в перегрев ротора
      unsigned TestMode         : 1;// Режим опробования
      unsigned Tougle           : 1;//
      unsigned Up               : 1;//
      unsigned UACC_OK          : 1;//наличие напряжения от АКБ начального возбуждения - постоянный ток	  
      //r0001.H
      unsigned UEWG_OK          : 1;//наличие напряжения от обмотки возбуждения генератора - постоянный ток
      unsigned UTSNG_OK         : 1;//наличие напряжения от трансформатора собственных нужд генератора - переменный ток
      unsigned BackPower        : 1;//отбратная мощность
      unsigned QminLimIrUp      : 1;//достигнута минимальная реактивная мощность, требуется повысить ток возбуждения
      unsigned QmaxLimIrDn      : 1;//достигнута максимальная реактивная мощность, требуется снизить ток возбуждения
      unsigned T1000Hz          : 1;//Используется для генерации 0.01 сек периодов отсчёта временных интервалов основного алгоритма
      unsigned FS_OK            : 1;//состояние файловой системы
      unsigned FLASH_WRITE      : 1;// 1-флэш модифицирован (сбразывается после выполнения команды чтения флэша)      
    } bits ;
} baFLAGS0;//флаги управления и индикации;

///////////////////////////////////////////////////////////////////////////////
typedef 
  union   {
    u32	   i;
    __packed struct {//флаги аварий
      //r0002.L
      unsigned Auto    : 1;//реальное состояние авто или ручной режим
      unsigned RotatingDiodeNotConducted : 1;//Неисправность вращающегося диода - не прововодящий
      unsigned RotatingDiodeShortCircuit : 1;//Неисправность вращающегося диода - короткозамкнытый
      unsigned b3      : 1;//
      unsigned b4      : 1;//
      unsigned b5      : 1;//
      unsigned b6      : 1;// 
      unsigned b7      : 1;// 
      //r0002.H
      unsigned b8      : 1;//
      unsigned b9      : 1;// 
      unsigned b10     : 1;// 
      unsigned b11     : 1;//
      unsigned b12     : 1;//
      unsigned LOG_STAT       : 1;//состояния логирования 
      unsigned LOG_UNMOUNT    : 1;//флаг для размонтирования системы
      unsigned LOG_ERROR      : 1;//ошибка лога - неправильно вытащили карту/ или карта битая? по идее лучше бы ввести флаг SD_ERROR чтобы различать ошибки
      //r0003.L
      unsigned FAULT        : 1;//Общий признак аварии = (OVC | OVL) выключает импульсы снимает сигнал Start, PWR и т.п.          
      unsigned RotatingDiodeFlt : 1;//Неисправность вращающегося диода
      unsigned GlobalError  : 1;//Авария вычесленная внешним устройством
      unsigned FieldFail    : 1;//Отсутствие возбуждения
      unsigned UstMaxFlt    : 1;//Достигнуто максимальное допустимое напряжение статора       
      unsigned IttMaxFlt    : 1;//Авария по току выпрямителя (от ТТ)      
      unsigned IexcMaxFlt   : 1;//авария превышение тока нагрузки
      unsigned FltMPS       : 1;// авария отключение силового выключателя во время работы (если разрешено)
      //r0003.H
      unsigned PowerBlockFlt   : 1;//неисправность силовой части       
      unsigned FLongForce   : 1;//Авария "превышение времени форсировки"      
      unsigned FltCCSB      : 1;//авария по причине пропадания напряжения питания оперативных цепей от ГЩУ
      unsigned FreqMinFlt   : 1;//защита по минимальной частоте напряжения генератора на холостом ходу
      unsigned QminAsyncRun : 1;//Асинхронный ход по минимальной реактивной мощности       
      unsigned NotUpVoltage : 1;//не достигнута уставка напряжения при пуске генератора      
      unsigned R_INSL_FLT   : 1;//аварийный порог изоляции
      unsigned IstOV        : 1;//Перегруз статора 
    } bits ;
} baFLAGS1;//флаги управления и индикации;
///////////////////////////////////////////////////////////////////////////////

typedef 
  union bits8{
   u8	   i;
   __packed struct {//флаги 
      unsigned flash_error : 1;	  //
      unsigned backup_error : 1;  //
      unsigned fram_error : 1;	  //
      unsigned fram_bkp_error : 1;//
      unsigned sram_error : 1;	  //
      //unsigned SD_init_error : 1; //результат инициализации SD-карты
      unsigned ext_master_lnk : 1;//Связь с внешним мастером по команде FA (0-есть, 1-нет)
    } BA;
} bits8;//флаги управления и индикации;

/////////////////////////////////////////////////////////////////////////////// 

//параметры расположеные в RAM
typedef struct TRAM_DATA {
    ////////////////////////////////////////////////////////////////////////////
    baFLAGS0 FLAGS0;//0-1 32bit флаги управления и индикации; 
    baFLAGS1 FLAGS1;//2-3 32bit флаги управления и индикации; 
    //дискр входы/выходы
    u16 DI;   //04 
    u16 DO;   //05
    //////////////
    //данные с платы DExS.M4CPU, фильтрованные
    u16 uUstat; //напряжение статора    с точностью 0.1
    u16 uIstat; //ток статора           с точностью 0.1
    u16 __uIsmax;  //ток статора грубо
    s16 sUexc;  //напряжение ротора     с точностью 0.1
    u16 uIexc;  //ток ротора            с точностью 0.01
    u16 IttA;   //38
    u16 IttB;   //3A
    u16 IttC;   //3C
    //данные с платы DExS.CPU.VTEG, фильтрованные, средние значения
    u16 uUpwr_ab;//напр. сети (с точностью 0.1)
    u16 uUpwr_bc;//напр. сети (с точностью 0.1)
    u16 uUpwr_ca;//напр. сети (с точностью 0.1)
    u16 uIpwr;   //ток сети (фидера)  (с точностью 0.1)
    u16 uUsg_ab; //напр. генератора (с точностью 0.1)
    u16 uUsg_bc; //напр. генератора (с точностью 0.1)
    u16 uUsg_ca; //напр. генератора (с точностью 0.1)
    ///////////////////////////////////////////////////////////////////////////
    u16  Freq;   //частота сети (с точностью до 0,01)
    f32  Phi;     //текущее значение угла сдвига фазы между напряжением и током генератора соsф (в виде)
    bauint  SYSTEM_STATE;//состояние генератора
                         //DEX_STATE
                         //REG_MODE режим регулирования 1-АРВ 3-РН 2-РТ
    u16  UstStC; //вычисленное значение для статизма (для контроля)
    f32  QoeByP; //Реактивная мощность в относительных единицах относительно текущей активной мощности
    f32  __dQref;  
    //перезаписываемая часть
    f32  EReg;    //накопитель регулятора тока возбуждения генератора
    f32  UsgRef;    //заданное значение напряжения генератора
    f32  StRef;     //заданный статизм
    f32  ARVRef;//
    f32  Ilim_max;//ограничение тока возбуждения по максимуму
    f32  Ilim_min;//ограничение тока возбуждения по максимуму 
    u16  RegCMD;  //команда регулятору
    u16 roIexcHistory;//индикатор тока 1 сек назад для перехода в ручной режим при неисправности автоматического канала
    ///////////////////////////////////////////////////////////////////////////
    f32  Qpwm;//ширина импульса управления
    //данные с платы DExS.PWR2
    u16 ___ReqMode__;//
    u16 RINSL;//сопротивление изоляции
    u16 __T_sync;//период сети
    u16 UEWG;//Напряжение обмотки возбуждения генератора
    u16 UTSNG;//Напряжение питания силовой части от трансформатора собственных нужд статора генератора
    u16 UACC;//Напряжение АКБ =24В начального возбуждения
    //продолжаю мощности Полная и Активная Реактивная
    f32 Ssg;     //полная мощность
    f32 Psg;     //активная мощность
    f32 Qsg;     //реактивной мощности генератора 
    ////////////////////////////////////////////////////////////////////////////
    u16  __IzBias; //величина приращения тока в автоматических регуляторах точность 0.001 (тут был DEX_STATE)
    s16 QLmin;//ограничитель минимальной реактивной мощности
    s16 QLmax;//ограничитель максимальной реактивной мощности
    u16 __UstStC; //вычисленное значение для статизма (для контроля)
    ////////////////////////////////////////////////////////////////////////////
    f32 QoeByPnom;
    //данные с платы DExS.CPU.VTEG, фильтрованные, средние значения
    f32 Osc[4];
    f32 Usg;// среднее действующее напряжение
    f32 __Phi;// сдвиг фазы
    f32 CosPhi;// косинус сдвига фазы
    f32 Isg;   //ток сети (фидера)
    f32 UabSg; //напр. генератора
    f32 UbcSg; //напр. генератора
    f32 UcaSg; //напр. генератора
    //f32 UabPwr;//напр. сети
    //f32 UbcPwr;//напр. сети
    //f32 UcaPwr;//напр. сети
    
    f32 i2tRSum;//r0014 накопленное кол-во тепла ротора
    //Ограничители по реактивной мощности (вычсленные для данной активной мощности)
    u16 ___Free_r77; //вычисленное значение для статизма (для контроля)
    f32 ___Free;//приращение к реактивной мощности в зависимоти от активной
    ///////////////////////////////////////////////////////////////////////////
    //u16 ext_ref; //опорное напряжение платы DExS.CPU.VTEG      
    u16 tmp1;//E
    u16 tmp2;//F
    ////////////////////////// 
    u32 Ei2tS;   //накопитель "тепла" в модели Статора
    //////////////////////////
    u16 ExtRegTimeOutTimer;//счётчик блокировки на запуск автоматического регалятора
    /////////////////////////////////////////////////////// 
    f32 Iexc;//ток ротора
    bits8 FLAGS;  //r0031
    u16 Last_lnk_error;//08 
    volatile u8  TimeBuf[8];//04-07
    u16 RCMD_Rst_Timer;//счётчик времени перехода к состоянию "ведущий" при 
                       //пропадании связи с Арбитром
    u16 ___gap___;
} TRAM_DATA;

#define DEX_STATE       RAM_DATA.SYSTEM_STATE.b[0]
#define REG_MODE        RAM_DATA.SYSTEM_STATE.b[1]
//параметры расположеные RAM
extern struct TRAM_DATA RAM_DATA;

extern u16 FLASH_change;

//определение диапазона доступных регистров
#define RAM_DATA_PREFIX 0x0
#define RAM_DATA_SIZE 0xf0

#endif