#ifndef FLASHDATA_H
#define FLASHDATA_H
#include "bastypes.h"//содержит описания структур данных
typedef struct TFLASH_DATA{
  u16 fIexcStart;//начальный ток возбуждения (ном напряжение на холостом ходу)
  u16 fIexcTest;//ток проверки цепи скольжения
  //критерии качества сети питания выпрямителя
  u16 fUTSNGmin;//минимальное напряжение тр-ра собственных нужд
  u16 fUEWGmin;//минимальное напряжение обмотки возбуждения
  u16 fUACCmin;//минимальное напряжение АКБ начального возбуждения
  u16 __UstACCStart;//минимальное напряжение статора при начальном возбуждении от АКБ
  u16 SpRectFltTime;//время определения качества сети
  //сопротивление изоляции
  u16 RInslLow;//аварийный порог сопротивления изоляции
  u16 RInslFlt;//предупредительный порог сопротивления изоляции
  u16 RInslUp;//задание гистерезиса в кОм на восстановление изоляции
              //для исключения дребезга контактов реле контроля изоляции
  //Флаги управления
  #define stReady_GS_ON     (1<<0)//1-есть готовность при включенном сетевом выключателе
  #define stRInslFltEnable  (1<<1)//1-разрешено отключение по пробою изоляции
  #define stFltCCSB_QF5     (1<<2)//1-разрешено отключение при пропадании питания цепей ГЩУ
  #define stFltMPS_QF1      (1<<3)//1-разрешено отключение при отключении силового выключателя
  #define stFFE             (1<<4)//1-разрешено отключение при обрыве поля (ток возбуждения ниже заданной уставки
  #define stSelfExcite        (1<<5)//1-разрешено самовозбуждение при включении сетевого выключателя
  #define stIttAsymFltEnable  (1<<6)//1-разрешено отключение при отключении при асимметрии фаз выпрямителя
  #define stIstatOvlFltEnable (1<<7)//1-разрешено отключение при перегрузе по току статора
  #define stBrakeOffEnable    (1<<8)//1-разрешено включение независимого расцепителя, который отключает
                                    //  вводной и отходящий выключатели силовой части
                                    //  при этом реле аварии не срабатывает! чтобы
                                    //  отработал резервный регулятор. В итоге, либо арбитр выключит
                                    //  систему из-за неисправности обоих регуляторов, либо будеь остановка
                                    //  по обрыву поля
  #define stRotDiodNCFltEn  (1<<9)//1-разрешено отключение при непроводимости диода
  #define stRotDiodSCFltEn  (1<<10)//1-разрешено отключение при КЗ диода
  #define stiPB_Fault       (1<<11)//1-разрешено отключение при аварии силовой части
  u16 Settings;
  /* FEDC BA98 7654 3210
     |||| |||| |||| ||||_Ready_GS_ON 1-есть готовность при включенном сетевом выключателе
     |||| |||| |||| |||__RInslFltEnable 1-разрешено отключение по пробою изоляции
     |||| |||| |||| ||___FltCCSB_QF5 1-разрешено отключение при пропадании питания цепей ГЩУ
     |||| |||| |||| |____stFltMPS_QF1 1-разрешено отключение при отключении силового выключателя
     |||| |||| ||||_FFE - разрешение отключения по обрыву поля
     |||| |||| |||__
     |||| |||| ||___
     |||| |||| |____
     |||| ||||_
     |||| |||__
     |||| ||___
     |||| |____
     ||||_
     |||__
     ||___
     |____
  */
  //Защиты тока ротора и выпрямителя
  u16 IexcMaxFlt; //уставка максимально-токовой защиты нагрузки по шунту
  u16 IttMaxFlt;//уставка максимально-токовой защиты выпрямителя (ТТ на входе выпрямителя)
  //Обрыв поля
  u16 FieldFailTime;//время определения обрыва поля
  u16 fIexcFieldFail;//Уставка тока обрыва поля
  //Настройки ПИД регулятора тока возбуждения
  u16 fKUst;  //коэф. усиления контура напряжения статора
  u16 fKIexc; //коэф. усиления контура тока ротора
  u16 fTi;    //интегральная часть
  u16 fTd;    //диф часть
  //настройка ШИМ
  u16 fQmax;//максимальный ШИМ
  u16 fQmin;//минимальный ШИМ (начала регулирования)
  u16 __fAblank__;//													
  //////////////////////////////////////////////
  u16 fTestTime;//время опробования
  u16 fBlankTime;//время инвертирования
  //////////////////////////////////////////////
  u16 _free_FSAsyncTime;//время асинхронного хода по датчику скольжения
  //////////////////////////////////////////////////////////////////////////////
  //Напряжение статора
  u16 UstLowReset;//восстановление напряжения после просадки
  u16 UstLowSet;  //просадка напряжения статора
  u16 UstFailReset;//уровень восстановления напряжения статора
  u16 UstFailSet;  //напряжения статора отсутствует
  //Защита по максимальному напряжению статора на холостом ходу
  u16 UstMax;  //уставка защиты по максимальному напряжению статора
  u16 UstMaxTime;//время отключения при превышении напряжением максимальной уставки
  //Защита по снижению частоты на холостом ходу
  u16 FreqMinFlt;    //уставка минимальной частоты
  u16 FreqMinFltTime;//время отключения при минимальной частоте
  //Тепловая защита ротора
  vu16 Ti2tR; //Постоянная времени тепловой защиты РОТОРА
  vu16 i2tOV_ON_R;//Уставка включения "Перегрев Ротора" (при превышение данной уставки 
                  //Ток принудительно снижается до уставки "ток при перегреве"
  vu16 i2tOV_OFF_R; //уставка отключения "Перегрев Ротора"
  vu16 Iref_i2t_R_limit;//максимальный заданный ток возбуждения при перегреве
  //////////////////////////////////////////////////////////////////////////////
  u16 fIexcForce;//ток возбуждения при форсировке
  u16 fLimIexcMin;//минимальный ток возбуждения
  u16 fIexcMax;//максимальный ток возбуждения в ручном режиме
  //////////////////////////////////////////////////////////////////////////////
  //Задание регулятора
  u16 UsgRef;//Напряжение статора задаётся в вольтах 10000, 6000В, с коэф 0,1 
  s16 CosPhiRef;//Заданный коэф. мощности для режима CosPhi
  s16 StRef;//коэффициент статизма, знаковое число с точностью до 3-го знака (коэф. 0,001)
  u16 IrefBtnSpeed;//величина приращения тока ротора кнопками больше/меньше. точность 0.001
  //////////////////////////////////////////////////////////////////////////////
  //Ограничители
  u16 Pnom;//номинальная мощность от которой делаются все расчёты ниже
  //таблица ОМВ задаётся для P=0 и P=1
  //уставки задаются c точностью 0,001 причём больше 1 оно никогда ни будет
  s16 QminP0;//самая минимальная реактивная мощность 
  s16 QminP1;//минимальная реактивная мощность при P1 (и для P>1
  //теперь задаю дельту (c точностью 0,001) для Qmin <Q <(Qmin+dQ)
  u16 dQmin;
  //таблица ОМВ задаётся для P=0 и P=1
  //уставки задаются c точностью 0,001 причём больше 1 оно никогда ни будет
  s16 QmaxP0;//допустимая макс. реактивная мощность в генераторном режиме (самая большая допустимая)
  s16 QmaxP1;//допустимая макс. реактивная мощность при P1 (и для P>1)
  //всинхронный ход по минимальной мощности ОМВ
  u16 QminAsyncTime;//время асинхронного хода по реактивной мощности
  //Переключатель режима работы
  u16 ARV_Mode;//тип автоматического регулятора
				//0 - РН рег напряжения + статизм
                //1 - Q - рег реактивной мощности
                //2 - CosPhi - рег косинуса Фи
  u16 WaitStable;//Завершение пусковых процессов, время перехода на автоматический регулятор
                 //при включении сетевого выключателя, смене режима (авто/руч и обратно) после форсировок
  //Органичитель задания Реактивной мощности в %
  s16 QoeRefLmax;//допустимый макс. статизм (задание статизма не увеличивается выше этой уставки)
  s16 QoeRefLmin;//допустимый мин. статизм (задание статизма не уменьшется ниже этой уставки)
  //Ограничитель задания напряжения статора В
  u16 UstLmax;//допустимое макс. заданное напряжение статора  (задание напряжение не увеличивается выше этой уставки)
  u16 UstLmin;//допустимое миним. заданное напряжение статора (задание напряжение не уменьшется ниже этой уставки)
  //Ограничитель задания cosФ в град, 0,хх
  s16 CosPhiRefMax;//допустимый макс. заданный угол Фи (задание не увеличивается выше этой уставки)
  s16 CosPhiRefMin;//допустимый мин. заданный угол Фи(задание не уменьшется ниже этой уставки)  
  //% регулирования реактивной мощности
  s16 QRef;//Задание регулирования реактивной мощности. точность 0.01
  //Ограничитель тока возбуждения в автоматическом режиме, А
  u16 dUsgUpByMEL;//приращение напряжение для выхода из минимальной реактивной мощности
  ///////////////////////////////////////////////////////////////////////////////////////////////
  u16 fLimIexcMaxIDLE;//ограничени тока возбуждения (на холостом ходу)
  //////////////////////////////////////////////////////////////////////////////
  u16 UstNom;//номимальное напряжение статора
  u16 UstStart;//уставка начального напряжения перед работой автоматического регулятора
  //////////////////////////////////////////////////////////////////////////////
  u16 WaitUpVoltageTime;//время ожидания подъёма до уставки напряжения статора
  //////////////////////////////////////////////////////////////////////////////
  //уставки приращения для разных режимов работы
  u16 dIexcOfUpStart;///Величина приращения тока при пуске/
  u16 dUsgBtnRef;//Приращение уставки напряжения при воздействии на ключ "уставка меньше/больше"
  u16 dQBtnRef;//Приращение уставки Q при задании реактивной мощности при воздействии на ключ "уставка меньше/больше"
  //
  u16 IexcNom;//номинальный ток возбуждения (для нормализации)
  //Асимметрия фаз выпрямителя по току
  u16 _fITTAsym;//% асимметрии фаз выпрямителя
  u16 _fITTAsymTime;//допустимое время асимметрии фаз тока выпрямителя
  //Перегруз по Току статора
  vu16 Ti2tS; //постоянная времени тепловой защиты СТАТОРА
  vu16 IstOVLFault; //уставка отключения Перегрев Статора" Перегрев Статора"
  //HUB
  u16 fCOM1DABP;//COM1 HI=Адрес (1), LO=BPS (115200)
  u16 Ip_addr_LO;//IP адрес для сетевой карты
  u16 Ip_addr_HI;//IP адрес для сетевой карты
  //Реле обратной мощности
  u16 BackPowerTime;//время срабатывания
  u16 dCosPhiBtnRef;//Приращение уставки CosPhi при регулировании коэффициента мощности при воздействии на ключ "уставка меньше/больше"
  u16 dUsgARVReg; // В/сек Приращение уставки Напряжения при автоматическом регулировании реактивной мощности 
  u16 __gap___;
  
} TFLASH_DATA;

//параметры расположеные FLASH

extern const TFLASH_DATA FLASH_DATA;
extern const TFLASH_DATA BKFLASH_DATA;
//копия уставок в оперативной памяти
extern TFLASH_DATA FLASH_DATA_RC;

//определение диапазона доступных регистров
#define FLASH_DATA_PREFIX 0x2
#define FLASH_DATA_SIZE sizeof(TFLASH_DATA)

extern void u8_mem_cpy( u8 *s, u8 *d, u8 c);

//функции
  #ifdef __cplusplus
    extern "C" void FlashDataMkRamCpy (void);//создание копии уставок в ОЗУ
    extern "C" bool FlashDataChk      (void);//сравнение уставок с их копией. TRUE если есть отличия
    extern "C" void FlashDataSave     (void);//сохранение копии уставок во flash
    extern "C" bool FlashDataLoaded   (void);//проверка на то что уставки выгружены в ОЗУ
    extern "C" bool ChkBuffersByWord(u32 Buff1, u32 Buff2, u16 WCount);
    extern "C" void SaveCD(void);
  #else
    extern void FlashDataMkRamCpy (void);//создание копии уставок в ОЗУ
    extern bool FlashDataChk      (void);//сравнение уставок с их копией. TRUE если есть отличия
    extern void FlashDataSave     (void);//сохранение копии уставок во flash
    extern bool FlashDataLoaded   (void);//проверка на то что уставки выгружены в ОЗУ
    extern bool ChkBuffersByWord(u32 Buff1, u32 Buff2, u16 WCount);
    extern void SaveCD(void);
  #endif
#endif